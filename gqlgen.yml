# schema tells gqlgen where the GraphQL schema is located.
schema:
  - app.graphql
  # The ent.graphql schema was generated by Ent
  - ent.graphql

# resolver reports where the resolver implementations go.
resolver:
  layout: follow-schema
  dir: .

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.

# autobind tells gqngen to search for any type names in the GraphQL schema in the
# provided package. If they match it will use them, otherwise it will generate new.
autobind:
  - mazza/ent
  - mazza/ent/accountingentry
  - mazza/ent/cashmovement
  - mazza/ent/company
  - mazza/ent/customer
  - mazza/ent/employee
  - mazza/ent/file
  - mazza/ent/payable
  - mazza/ent/product
  - mazza/ent/productmovement
  - mazza/ent/receivable
  - mazza/ent/supplier
  - mazza/ent/token
  - mazza/ent/treasury
  - mazza/ent/user
  - mazza/ent/userrole
  - mazza/ent/workshift
  - mazza/ent/worktag
  - mazza/ent/worktask

# This section declares type mapping between the GraphQL and Go type systems.
models:
  # Defines the ID field as Go 'int'.
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.IntID
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Node:
    model:
      - mazza/ent.Noder

  # Cursor:
  #   model:
  #     - mazza/ent.Cursor # Assuming this is the correct path to the named type
  # PageInfo:
  #   model:
  #     - mazza/ent.PageInfo # Ensure it's a named type
  # OrderDirection:
  #   model:
  #     - mazza/ent.OrderDirection # Ensure it's a named type