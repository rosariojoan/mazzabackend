package mazza

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.52

import (
	"context"
	accountingentry "mazza/app/accountingEntry"
	"mazza/app/analytics"
	"mazza/ent/utils"
	"mazza/mazza/generated/model"
)

// ExpensesBreakdown is the resolver for the expensesBreakdown field.
func (r *queryResolver) ExpensesBreakdown(ctx context.Context, rangeArg model.TimeRange) ([]*model.ExpensesBreakdownOutput, error) {
	_, currentCompany := utils.GetSession(&ctx)
	breadown, err := accountingentry.AggregateExpenses(ctx, *r.client.AccountingEntry, currentCompany.ID, rangeArg)
	return breadown, err
}

// RevenueTrend is the resolver for the revenueTrend field.
func (r *queryResolver) RevenueTrend(ctx context.Context, rangeArg model.TimeRange) ([]*model.RevenueTrendOutput, error) {
	_, currentCompany := utils.GetSession(&ctx)
	_ = currentCompany
	trend, err := accountingentry.AggregateRevenue(ctx, *r.client.AccountingEntry, currentCompany.ID, rangeArg)
	return trend, err
}

// HomepageAnalytics is the resolver for the homepageAnalytics field.
func (r *queryResolver) HomepageAnalytics(ctx context.Context) (*model.HomepageAnalytics, error) {
	return analytics.HomepageAnalytics(ctx, r.client)
}
