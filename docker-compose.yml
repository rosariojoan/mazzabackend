# Backend network is only available locally
networks:
  backend:
    internal: true
    driver: bridge
  frontend:

services:
  app:
    container_name: golang_container
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT=${DB_PORT}
    tty: true
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - backend

  db:
    image: postgis/postgis
    container_name: postgres_container
    env_file: .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST=${DB_HOST}
      - PGDATA=/var/lib/postgresql/data
    networks:
      - backend
    restart: on-failure
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      # test: ["CMD-SHELL", "pg_isready  -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      test: ["CMD-SHELL", "pg_isready -d $${DB_NAME} -U $${DB_USER}"]
      interval: 3s
      timeout: 5s
      retries: 10

  proxy:
    image: nginx
    volumes:
      - ./certs:/etc/nginx/certs:ro
      - type: bind
        source: ./proxy/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    ports:
      - 80:80
      - 443:443
    depends_on: 
      - app
    networks:
      - backend
      - frontend

volumes:
  pgdata: